# ver inicialização de todos.dados.pet), e ajustar identificadores das linhas
# dos dados para que comecem em 1.
todos.dados.pet <- todos.dados.pet[-1, ];
rownames(todos.dados.pet) <- 1:nrow(todos.dados.pet);
# Aqui devem ser tornados mais inteligíveis os nomes dos campos de dados,
# conforme descrição no enunciado do projeto.
names(todos.dados.pet) <- c("Canal", "HoraInicio", "Duracao", "Zero", "Nome1", "Nome2", "Classificacao", "Tipo", "ParteTodo", "Data")
todos.dados.pet$Canal <- factor(todos.dados.pet$Canal);
#todos.dados.pet$HoraInicio <- format(strptime(sprintf("%06.0f", todos.dados.pet$HoraInicio), format="%H%M%S"), format="%H:%M:%S")
hora <- sprintf("%06.0f", todos.dados.pet$HoraInicio);
todos.dados.pet$HoraInicio <- strptime(paste(todos.dados.pet$Data, hora), format="%Y-%m-%d %H%M%S")
todos.dados.pet
summary(todos.dados.pet)
todos.dados.pet$ParteTodo <- factor(todos.dados.pet$ParteTodo);
summary(todos.dados.pet)
sqldf("SELECT * FROM audiencias_original AS a, espetadores AS e WHERE a.ID == e.ID")
library("sqldf");
#install.packages("sqldf");
library(tools)
library("sqldf");
#library("lattice");
rm(list=ls(all=TRUE))
setwd("./Data");
audiencias_original  <-
read.table(file = "./audiencias.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(audiencias_original) <- c("ID", "Data", "Canal", "Duracao", "HoraInicio", "HoraFim")
audiencias <- audiencias_original
audiencias$ID <- factor(audiencias$ID);
audiencias$Data <- as.Date(audiencias$Data, "#%Y-%m-%d#");
audiencias$Canal <- factor(audiencias$Canal);
audiencias$HoraInicio <- strptime(audiencias$HoraInicio, format="#%Y-%m-%d  %H:%M:%S#")
audiencias$HoraFim <- strptime(audiencias$HoraFim, format="#%Y-%m-%d  %H:%M:%S#")
espetadores_original <-
read.table(file = "./espetadores.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(espetadores_original) <- c("ID", "Codigo", "Regiao", "Sexo", "DonaDeCasa", "EscalaoEtario", "Classe", "Data")
espetadores <- espetadores_original
espetadores$ID <- factor(espetadores$ID);
espetadores$Codigo <- factor(espetadores$Codigo);
espetadores$Regiao <- factor(espetadores$Regiao);
espetadores$Sexo <- factor(espetadores$Sexo);
espetadores$DonaDeCasa <- factor(espetadores$DonaDeCasa);
espetadores$EscalaoEtario <- factor(espetadores$EscalaoEtario);
espetadores$Classe <- factor(espetadores$Classe);
espetadores$Data <- as.Date(espetadores$Data, "#%Y-%m-%d#");
classes <-
read.table(file = "./classes.tsv",
header = TRUE,
sep = "\t");
names(classes) <- c("Classe", "Estatuto", "Ocupacao")
tipologia <-
read.table(file = "./tipologia.tsv",
header = TRUE,
sep = "\t");
names(tipologia) <- c("Tipo", "Designacao")
# Mudar para a pasta com os ficheiros PET.
setwd("./pet-1s96");
# Obter lista ordenada de nomes de ficheiros PET referentes a janeiro de 1996.
ficheiros.pet <- sort(list.files(pattern = "1996[0-1][0-9][0-3][0-9].pet"),
decreasing = FALSE);
# Variável que vai guardar os dados provenientes dos ficheiros PET.
todos.dados.pet <- NA;
# Analisar todos os ficheiros PET em consideração.
for (pet.atual in ficheiros.pet) {
# Mostrar o nome do ficheiro PET que vai ser processado.
#print(pet.atual);
# Ler os dados do ficheiro PET atual para uma variável própria.
dados.pet.atual <-
read.table(file = pet.atual,
header = FALSE,
sep = ",",
quote = "\"",            # Retirar aspas de campos de texto.
comment.char = ";",           # Ignorar ponto e vírgula no final.
fill = TRUE);
# Aqui pode ser conveniente acrescentar um campo extra a dados.pet.atual,
# nomeadamente com a indicação do dia do ano em causa. Por exemplo, para
# acrescentar um campo V10 com valor estático de 19960101 pode ser usado
# dados.pet.atual <- cbind(dados.pet.atual, V10 = "19960101").
dia <- as.Date(file_path_sans_ext(pet.atual), "%Y%m%d")
dados.pet.atual <- cbind(dados.pet.atual, V10 = dia)
# Adicionar dados do ficheiro PET atual aos que já haviam sido lidos.
todos.dados.pet <- rbind(todos.dados.pet, dados.pet.atual);
}
# Apagar a primeira linha de dados, pois só contém valores NA (not available;
# ver inicialização de todos.dados.pet), e ajustar identificadores das linhas
# dos dados para que comecem em 1.
todos.dados.pet <- todos.dados.pet[-1, ];
rownames(todos.dados.pet) <- 1:nrow(todos.dados.pet);
# Aqui devem ser tornados mais inteligíveis os nomes dos campos de dados,
# conforme descrição no enunciado do projeto.
todos.dados.pet_original <- todos.dados.pet
names(todos.dados.pet) <- c("Canal", "HoraInicio", "Duracao", "Zero", "Nome1", "Nome2", "Classificacao", "Tipo", "ParteTodo", "Data")
todos.dados.pet$Canal <- factor(todos.dados.pet$Canal);
todos.dados.pet$ParteTodo <- factor(todos.dados.pet$ParteTodo);
#todos.dados.pet$HoraInicio <- format(strptime(sprintf("%06.0f", todos.dados.pet$HoraInicio), format="%H%M%S"), format="%H:%M:%S")
hora <- sprintf("%06.0f", todos.dados.pet$HoraInicio);
todos.dados.pet$HoraInicio <- strptime(paste(todos.dados.pet$Data, hora), format="%Y-%m-%d %H%M%S")
#### VERIFICAR
# Mudar para a pasta original.
setwd("..");
setwd("..")
# Pesquisa de linhas com dados sobre o canal 1 usando uma interrogação SQL.
dados <- sqldf("SELECT * FROM audiencias_original");
sqldf("SELECT * FROM audiencias_original AS a, espetadores AS e WHERE a.ID == e.ID")
View(todos.dados.pet_original)
View(todos.dados.pet_original)
View(todos.dados.pet_original)
View(todos.dados.pet_original)
#install.packages("sqldf");
library(tools)
library("sqldf");
#library("lattice");
rm(list=ls(all=TRUE))
setwd("./Data");
audiencias_original  <-
read.table(file = "./audiencias.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(audiencias_original) <- c("ID", "Data", "Canal", "Duracao", "HoraInicio", "HoraFim")
audiencias <- audiencias_original
audiencias$ID <- factor(audiencias$ID);
audiencias$Data <- as.Date(audiencias$Data, "#%Y-%m-%d#");
audiencias$Canal <- factor(audiencias$Canal);
audiencias$HoraInicio <- strptime(audiencias$HoraInicio, format="#%Y-%m-%d  %H:%M:%S#")
audiencias$HoraFim <- strptime(audiencias$HoraFim, format="#%Y-%m-%d  %H:%M:%S#")
espetadores_original <-
read.table(file = "./espetadores.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(espetadores_original) <- c("ID", "Codigo", "Regiao", "Sexo", "DonaDeCasa", "EscalaoEtario", "Classe", "Data")
espetadores <- espetadores_original
espetadores$ID <- factor(espetadores$ID);
espetadores$Codigo <- factor(espetadores$Codigo);
espetadores$Regiao <- factor(espetadores$Regiao);
espetadores$Sexo <- factor(espetadores$Sexo);
espetadores$DonaDeCasa <- factor(espetadores$DonaDeCasa);
espetadores$EscalaoEtario <- factor(espetadores$EscalaoEtario);
espetadores$Classe <- factor(espetadores$Classe);
espetadores$Data <- as.Date(espetadores$Data, "#%Y-%m-%d#");
classes <-
read.table(file = "./classes.tsv",
header = TRUE,
sep = "\t");
names(classes) <- c("Classe", "Estatuto", "Ocupacao")
tipologia <-
read.table(file = "./tipologia.tsv",
header = TRUE,
sep = "\t");
names(tipologia) <- c("Tipo", "Designacao")
# Mudar para a pasta com os ficheiros PET.
setwd("./pet-1s96");
# Obter lista ordenada de nomes de ficheiros PET referentes a janeiro de 1996.
ficheiros.pet <- sort(list.files(pattern = "1996[0-1][0-9][0-3][0-9].pet"),
decreasing = FALSE);
# Variável que vai guardar os dados provenientes dos ficheiros PET.
todos.dados.pet <- NA;
# Analisar todos os ficheiros PET em consideração.
for (pet.atual in ficheiros.pet) {
# Mostrar o nome do ficheiro PET que vai ser processado.
#print(pet.atual);
# Ler os dados do ficheiro PET atual para uma variável própria.
dados.pet.atual <-
read.table(file = pet.atual,
header = FALSE,
sep = ",",
quote = "\"",            # Retirar aspas de campos de texto.
comment.char = ";",           # Ignorar ponto e vírgula no final.
fill = TRUE);
# Aqui pode ser conveniente acrescentar um campo extra a dados.pet.atual,
# nomeadamente com a indicação do dia do ano em causa. Por exemplo, para
# acrescentar um campo V10 com valor estático de 19960101 pode ser usado
# dados.pet.atual <- cbind(dados.pet.atual, V10 = "19960101").
dia <- as.Date(file_path_sans_ext(pet.atual), "%Y%m%d")
dados.pet.atual <- cbind(dados.pet.atual, V10 = dia)
# Adicionar dados do ficheiro PET atual aos que já haviam sido lidos.
todos.dados.pet <- rbind(todos.dados.pet, dados.pet.atual);
}
#install.packages("sqldf");
library(tools)
library("sqldf");
#library("lattice");
rm(list=ls(all=TRUE))
audiencias_original  <-
read.table(file = "./audiencias.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(audiencias_original) <- c("ID", "Data", "Canal", "Duracao", "HoraInicio", "HoraFim")
audiencias <- audiencias_original
audiencias$ID <- factor(audiencias$ID);
audiencias$Data <- as.Date(audiencias$Data, "#%Y-%m-%d#");
audiencias$Canal <- factor(audiencias$Canal);
audiencias$HoraInicio <- strptime(audiencias$HoraInicio, format="#%Y-%m-%d  %H:%M:%S#")
audiencias$HoraFim <- strptime(audiencias$HoraFim, format="#%Y-%m-%d  %H:%M:%S#")
espetadores_original <-
read.table(file = "./espetadores.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(espetadores_original) <- c("ID", "Codigo", "Regiao", "Sexo", "DonaDeCasa", "EscalaoEtario", "Classe", "Data")
espetadores <- espetadores_original
espetadores$ID <- factor(espetadores$ID);
espetadores$Codigo <- factor(espetadores$Codigo);
espetadores$Regiao <- factor(espetadores$Regiao);
espetadores$Sexo <- factor(espetadores$Sexo);
espetadores$DonaDeCasa <- factor(espetadores$DonaDeCasa);
espetadores$EscalaoEtario <- factor(espetadores$EscalaoEtario);
espetadores$Classe <- factor(espetadores$Classe);
espetadores$Data <- as.Date(espetadores$Data, "#%Y-%m-%d#");
classes <-
read.table(file = "./classes.tsv",
header = TRUE,
sep = "\t");
names(classes) <- c("Classe", "Estatuto", "Ocupacao")
tipologia <-
read.table(file = "./tipologia.tsv",
header = TRUE,
sep = "\t");
names(tipologia) <- c("Tipo", "Designacao")
# Mudar para a pasta com os ficheiros PET.
setwd("./pet-1s96");
# Obter lista ordenada de nomes de ficheiros PET referentes a janeiro de 1996.
ficheiros.pet <- sort(list.files(pattern = "1996[0-1][0-9][0-3][0-9].pet"),
decreasing = FALSE);
# Variável que vai guardar os dados provenientes dos ficheiros PET.
todos.dados.pet <- NA;
# Analisar todos os ficheiros PET em consideração.
for (pet.atual in ficheiros.pet) {
# Mostrar o nome do ficheiro PET que vai ser processado.
#print(pet.atual);
# Ler os dados do ficheiro PET atual para uma variável própria.
dados.pet.atual <-
read.table(file = pet.atual,
header = FALSE,
sep = ",",
quote = "\"",            # Retirar aspas de campos de texto.
comment.char = ";",           # Ignorar ponto e vírgula no final.
fill = TRUE);
# Aqui pode ser conveniente acrescentar um campo extra a dados.pet.atual,
# nomeadamente com a indicação do dia do ano em causa. Por exemplo, para
# acrescentar um campo V10 com valor estático de 19960101 pode ser usado
# dados.pet.atual <- cbind(dados.pet.atual, V10 = "19960101").
dia <- as.Date(file_path_sans_ext(pet.atual), "%Y%m%d")
dados.pet.atual <- cbind(dados.pet.atual, V10 = dia)
# Adicionar dados do ficheiro PET atual aos que já haviam sido lidos.
todos.dados.pet <- rbind(todos.dados.pet, dados.pet.atual);
}
# Apagar a primeira linha de dados, pois só contém valores NA (not available;
# ver inicialização de todos.dados.pet), e ajustar identificadores das linhas
# dos dados para que comecem em 1.
todos.dados.pet <- todos.dados.pet[-1, ];
rownames(todos.dados.pet) <- 1:nrow(todos.dados.pet);
# Aqui devem ser tornados mais inteligíveis os nomes dos campos de dados,
# conforme descrição no enunciado do projeto.
todos.dados.pet_original <- todos.dados.pet
names(todos.dados.pet) <- c("Canal", "HoraInicio", "Duracao", "Zero", "Nome1", "Nome2", "Classificacao", "Tipo", "ParteTodo", "Data")
todos.dados.pet$Canal <- factor(todos.dados.pet$Canal);
todos.dados.pet$ParteTodo <- factor(todos.dados.pet$ParteTodo);
#todos.dados.pet$HoraInicio <- format(strptime(sprintf("%06.0f", todos.dados.pet$HoraInicio), format="%H%M%S"), format="%H:%M:%S")
hora <- sprintf("%06.0f", todos.dados.pet$HoraInicio);
todos.dados.pet$HoraInicio <- strptime(paste(todos.dados.pet$Data, hora), format="%Y-%m-%d %H%M%S")
#### VERIFICAR
# Mudar para a pasta original.
setwd("..");
setwd("..")
setwd("./Data");
audiencias_original  <-
read.table(file = "./audiencias.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(audiencias_original) <- c("ID", "Data", "Canal", "Duracao", "HoraInicio", "HoraFim")
audiencias <- audiencias_original
audiencias$ID <- factor(audiencias$ID);
audiencias$Data <- as.Date(audiencias$Data, "#%Y-%m-%d#");
audiencias$Canal <- factor(audiencias$Canal);
audiencias$HoraInicio <- strptime(audiencias$HoraInicio, format="#%Y-%m-%d  %H:%M:%S#")
audiencias$HoraFim <- strptime(audiencias$HoraFim, format="#%Y-%m-%d  %H:%M:%S#")
espetadores_original <-
read.table(file = "./espetadores.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(espetadores_original) <- c("ID", "Codigo", "Regiao", "Sexo", "DonaDeCasa", "EscalaoEtario", "Classe", "Data")
espetadores <- espetadores_original
espetadores$ID <- factor(espetadores$ID);
espetadores$Codigo <- factor(espetadores$Codigo);
espetadores$Regiao <- factor(espetadores$Regiao);
espetadores$Sexo <- factor(espetadores$Sexo);
espetadores$DonaDeCasa <- factor(espetadores$DonaDeCasa);
espetadores$EscalaoEtario <- factor(espetadores$EscalaoEtario);
espetadores$Classe <- factor(espetadores$Classe);
espetadores$Data <- as.Date(espetadores$Data, "#%Y-%m-%d#");
classes <-
read.table(file = "./classes.tsv",
header = TRUE,
sep = "\t");
names(classes) <- c("Classe", "Estatuto", "Ocupacao")
tipologia <-
read.table(file = "./tipologia.tsv",
header = TRUE,
sep = "\t");
names(tipologia) <- c("Tipo", "Designacao")
view_class <- <- sqldf("SELECT *
FROM espetadores_original AS e, audiencias_original AS a, classes AS c
WHERE a.ID == e.ID AND e.Classe == c.Classe")
view_class <- <- sqldf("SELECT *
FROM espetadores_original AS e, audiencias_original AS a, classes AS c WHERE a.ID == e.ID AND e.Classe == c.Classe")
view_class <- <- sqldf("SELECT * FROM espetadores_original AS e, audiencias_original AS a, classes AS c WHERE a.ID == e.ID AND e.Classe == c.Classe")
view_class <- sqldf("SELECT * FROM espetadores_original AS e, audiencias_original AS a, classes AS c WHERE a.ID == e.ID AND e.Classe == c.Classe")
view_class <- sqldf("SELECT * FROM espetadores_original AS e, audiencias_original AS a, classes AS c WHERE a.ID == e.ID AND e.Classe == c.Classe")
View(view_class)
View(view_class)
view_class <- sqldf("SELECT DISTINCT * FROM espetadores_original AS e, audiencias_original AS a, classes AS c WHERE a.ID == e.ID AND e.Classe == c.Classe")
View(view_class)
View(view_class)
audiencias.sort.ID <- sqldf("SELECT * FROM audiencias_original ORDER BY ID");
audiencias.sort.Data <- sqldf("SELECT * FROM audiencias_original ORDER BY Data");
audiencias.sort.Canal <- sqldf("SELECT * FROM audiencias_original ORDER BY Canal");
audiencias.sort.Duracao <- sqldf("SELECT * FROM audiencias_original ORDER BY Duracao");
audiencias.sort.HoraInicio <- sqldf("SELECT * FROM audiencias_original ORDER BY HoraInicio");
audiencias.sort.HoraFim <- sqldf("SELECT * FROM audiencias_original ORDER BY HoraFim");
View(audiencias.sort.Canal)
View(audiencias.sort.Canal)
audiencias_original[id.na(audiencias_original$ID),]
audiencias_original[id.na(audiencias_original$ID),]
audiencias_original[is.na(audiencias_original$ID),]
audiencias_original[is.na(audiencias_original$ID),]!=0
espetadores[is.na(espetadores$Codigo),];
espetadores[is.na(espetadores$Codigo),];names(espetadores_original) <- c("ID", "Codigo", "Regiao", "Sexo", "DonaDeCasa", "EscalaoEtario", "Classe", "Data")
# Audiencias File
audiencias[is.na(audiencias$ID),];
audiencias[is.na(audiencias$Data),];
audiencias[is.na(audiencias$Canal),];
audiencias[is.na(audiencias$Duracao),];
audiencias[is.na(audiencias$HoraInicio),];
audiencias[is.na(audiencias$HoraFim),];
# Espetadores File
espetadores[is.na(espetadores$ID),];
espetadores[is.na(espetadores$Codigo),];
espetadores[is.na(espetadores$Regiao),];
espetadores[is.na(espetadores$Sexo),];
espetadores[is.na(espetadores$DonaDeCasa),];
espetadores[is.na(espetadores$EscalaoEtario),];
espetadores[is.na(espetadores$Classe),];
espetadores[is.na(espetadores$Data),];
# Classes File
classes[is.na(classes$Classe),];
classes[is.na(classes$Estatuto),];
classes[is.na(classes$Ocupacao),];
# Tipologia File
tipologia[is.na(tipologia$Tipo),];
tipologia[is.na(tipologia$Designacao),];
todos.dados.pet[is.na(todos.dados.pet$Canal),];
todos.dados.pet[is.na(todos.dados.pet$HoraInicio),];
todos.dados.pet[is.na(todos.dados.pet$Duracao),];
todos.dados.pet[is.na(todos.dados.pet$Zero),];
todos.dados.pet[is.na(todos.dados.pet$Nome1),];
todos.dados.pet[is.na(todos.dados.pet$Nome2),];
todos.dados.pet[is.na(todos.dados.pet$Classificacao),];
todos.dados.pet[is.na(todos.dados.pet$Tipo),];
todos.dados.pet[is.na(todos.dados.pet$ParteTodo),];
todos.dados.pet[is.na(todos.dados.pet$Data),];
summary(audiencias);
summary(espetadores);
summary(classes);
summary(tipologia);
summary(todos.dados.pet);
summary(espetadores);
espetadores_classes <- sqldf("SELECT * FROM espetadores, classes WHERE espetadores.Classe == classes.Classe");
View(espetadores_classes)
View(espetadores_classes)
espetadores
espetadores_audiencias <- sqldf("SELECT * FROM espetadores, audiencias WHERE espetadores.ID == audiencias.ID");
espetadores_audiencias <- sqldf("SELECT * FROM espetadores, audiencias_original WHERE espetadores.ID == audiencias.ID");
espetadores_audiencias <- sqldf("SELECT * FROM espetadores, audiencias_original WHERE espetadores.ID == audiencias_original.ID");
audiencias_detalhes <- sqldf("SELECT * FROM audiencias_original, pet_data  WHERE audiencias_original.Canal == pet_data.Canal");
pet_data <- todos.dados.pet_original;
audiencias_detalhes <- sqldf("SELECT * FROM audiencias_original, pet_data  WHERE audiencias_original.Canal == pet_data.Canal");
View(pet_data)
View(pet_data)
names(todos.dados.pet) <- c("Canal", "HoraInicio", "Duracao", "Zero", "Nome1", "Nome2", "Classificacao", "Tipo", "ParteTodo", "Data")
audiencias_detalhes <- sqldf("SELECT * FROM audiencias_original, pet_data  WHERE audiencias_original.Canal == pet_data.Canal");
pet_data <- todos.dados.pet_original;
View(pet_data)
View(pet_data)
todos.dados.pet_original <- todos.dados.pet
View(todos.dados.pet)
View(todos.dados.pet)
View(todos.dados.pet_original)
View(todos.dados.pet_original)
View(pet_data)
View(pet_data)
View(espetadores_original)
# -----------------------------------------------------------------------------
# Integração e Processamento Analítico de Informação
#
#   André Oliveira - 45648
#   Jacek
#   Tomás
#
# TV audiences project - Load data to R
# -----------------------------------------------------------------------------
library(tools)
rm(list=ls(all=TRUE))
setwd("./Data");
audiencias_original  <-
read.table(file = "./audiencias.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(audiencias_original) <- c("ID", "Data", "Canal", "Duracao", "HoraInicio", "HoraFim")
audiencias <- audiencias_original
audiencias$ID <- factor(audiencias$ID);
audiencias$Data <- as.Date(audiencias$Data, "#%Y-%m-%d#");
audiencias$Canal <- factor(audiencias$Canal);
audiencias$HoraInicio <- strptime(audiencias$HoraInicio, format="#%Y-%m-%d  %H:%M:%S#")
audiencias$HoraFim <- strptime(audiencias$HoraFim, format="#%Y-%m-%d  %H:%M:%S#")
espetadores_original <-
read.table(file = "./espetadores.csv",      # Ficheiro da fonte de dados
header = FALSE,          # Primeira linha tem dados
sep = ",",               # Valores separados por vírgulas
dec = ".",               # Separador decimal é um ponto
comment.char = "");      # Cada linha só tem dados
names(espetadores_original) <- c("ID", "Codigo", "Regiao", "Sexo", "DonaDeCasa", "EscalaoEtario", "Classe", "Data")
espetadores <- espetadores_original
espetadores$ID <- factor(espetadores$ID);
espetadores$Codigo <- factor(espetadores$Codigo);
espetadores$Regiao <- factor(espetadores$Regiao);
espetadores$Sexo <- factor(espetadores$Sexo);
espetadores$DonaDeCasa <- factor(espetadores$DonaDeCasa);
espetadores$EscalaoEtario <- factor(espetadores$EscalaoEtario);
espetadores$Classe <- factor(espetadores$Classe);
espetadores$Data <- as.Date(espetadores$Data, "#%Y-%m-%d#");
classes <-
read.table(file = "./classes.tsv",
header = TRUE,
sep = "\t");
names(classes) <- c("Classe", "Estatuto", "Ocupacao")
tipologia <-
read.table(file = "./tipologia.tsv",
header = TRUE,
sep = "\t");
names(tipologia) <- c("Tipo", "Designacao")
# Mudar para a pasta com os ficheiros PET.
setwd("./pet-1s96");
# Obter lista ordenada de nomes de ficheiros PET referentes a janeiro de 1996.
ficheiros.pet <- sort(list.files(pattern = "1996[0-1][0-9][0-3][0-9].pet"),
decreasing = FALSE);
# Variável que vai guardar os dados provenientes dos ficheiros PET.
todos.dados.pet <- NA;
# Analisar todos os ficheiros PET em consideração.
for (pet.atual in ficheiros.pet) {
# Mostrar o nome do ficheiro PET que vai ser processado.
#print(pet.atual);
# Ler os dados do ficheiro PET atual para uma variável própria.
dados.pet.atual <-
read.table(file = pet.atual,
header = FALSE,
sep = ",",
quote = "\"",            # Retirar aspas de campos de texto.
comment.char = ";",           # Ignorar ponto e vírgula no final.
fill = TRUE);
# Aqui pode ser conveniente acrescentar um campo extra a dados.pet.atual,
# nomeadamente com a indicação do dia do ano em causa. Por exemplo, para
# acrescentar um campo V10 com valor estático de 19960101 pode ser usado
# dados.pet.atual <- cbind(dados.pet.atual, V10 = "19960101").
dia <- as.Date(file_path_sans_ext(pet.atual), "%Y%m%d")
dados.pet.atual <- cbind(dados.pet.atual, V10 = dia)
# Adicionar dados do ficheiro PET atual aos que já haviam sido lidos.
todos.dados.pet <- rbind(todos.dados.pet, dados.pet.atual);
}
# Apagar a primeira linha de dados, pois só contém valores NA (not available;
# ver inicialização de todos.dados.pet), e ajustar identificadores das linhas
# dos dados para que comecem em 1.
todos.dados.pet <- todos.dados.pet[-1, ];
rownames(todos.dados.pet) <- 1:nrow(todos.dados.pet);
# Aqui devem ser tornados mais inteligíveis os nomes dos campos de dados,
# conforme descrição no enunciado do projeto.
names(todos.dados.pet) <- c("Canal", "HoraInicio", "Duracao", "Zero", "Nome1", "Nome2", "Classificacao", "Tipo", "ParteTodo", "Data")
todos.dados.pet_original <- todos.dados.pet
todos.dados.pet$Canal <- factor(todos.dados.pet$Canal);
todos.dados.pet$ParteTodo <- factor(todos.dados.pet$ParteTodo);
todos.dados.pet$HoraInicio <- format(strptime(sprintf("%06.0f", todos.dados.pet$HoraInicio), format="%H%M%S"), format="%H:%M:%S")
# Alternative. to show full date:
# hora <- sprintf("%06.0f", todos.dados.pet$HoraInicio);
# todos.dados.pet$HoraInicio <- strptime(paste(todos.dados.pet$Data, hora), format="%Y-%m-%d %H%M%S")
# Mudar para a pasta original.
setwd("..");
setwd("..");
# -----------------------------------------------------------------------------
pet_data <- todos.dados.pet_original;
View(pet_data)
View(pet_data)
pet_data <- todos.dados.pet;
audiencias_programa <- sqldf("SELECT * FROM audiencias_original, pet_data  WHERE audiencias_original.Canal == pet_data.Canal");
